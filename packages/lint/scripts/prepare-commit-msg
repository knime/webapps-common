#!/usr/bin/env bash

# see README.md for more details
# 
# This hook expects to find environment variables
# - "KNIME_ATLASSIAN_EMAIL"
# - "KNIME_ATLASSIAN_API_TOKEN"
# set in your path containing your Atlassian account email and API token
# respectively. The latter can optionally be set using a secret storage tool

set -uo pipefail

logPrefix="prepare-commit-msg git hook:"

get_token_from_keychain() {
  local keyName="KNIME_ATLASSIAN_API_TOKEN"

  case "$(uname)" in
    Darwin*) # macOS
      key=$(security find-generic-password -w -s "${keyName}")
      exitStatus=$?
      ;;
    Linux*)
      # You need 'secret-tool' (part of libsecret-tools package)
      # Install it on Ubuntu/Debian with: sudo apt-get install libsecret-tools
      key=$(secret-tool lookup name "${keyName}")
      exitStatus=$?
      ;;
    *)
      echo "$logPrefix KNIME_ATLASSIAN_API_TOKEN not set or unable to find it in keychain."
      exit 1
      ;;
  esac

  if [ "${exitStatus}" -ne 0 ]; then
    echo "$logPrefix KNIME_ATLASSIAN_API_TOKEN not set or unable to find it in keychain."
    exit 1
  fi

  KNIME_ATLASSIAN_API_TOKEN="${key}"
}

check_env_variable() {
  if [ -z "${KNIME_ATLASSIAN_EMAIL+x}" ]; then
    echo "$logPrefix KNIME_ATLASSIAN_EMAIL not set."
    exit 1
  fi

  if [ -z "${KNIME_ATLASSIAN_API_TOKEN+x}" ]; then
    get_token_from_keychain
  fi
}

# Read issue ID from branch name, read issue summary from the web,
# and generate a commit message outline.
# This also works with `git commit -m ...`

message="${2:-""}"

if [[ -z "$message" || "$message" = "message" ]]; then
  branch=$(git symbolic-ref --short HEAD)

  if [[ $branch =~ ^(.*/)?([A-Z]+-[0-9]+) ]]; then
    check_env_variable

    issue_id=${BASH_REMATCH[2]}
    cachedir="/tmp/.gitjiratitle"
    cachefile="$cachedir/$issue_id"

    if [[ ! -f "$cachefile" ]]; then
      mkdir -p "$cachedir"
      curl -s -u "$KNIME_ATLASSIAN_EMAIL":"$KNIME_ATLASSIAN_API_TOKEN" https://knime-com.atlassian.net/rest/api/2/issue/"$issue_id"?fields=summary |
        sed -rn 's/.*"summary":"(.*)".*/\1/p' | sed -e 's/\\"/"/g' > "$cachefile"
    fi

    sed -i.bak -e '1s/^\(.*\)$/'"$issue_id":' \1\'$'\n'/ "$1"
    echo "$issue_id ($(<"$cachefile"))" >> "$1"
  fi
fi