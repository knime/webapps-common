image: node:22.11.0 # using 22.11.0 because the experimental feature for importing ESM (enabled by default starting with node 22.12.0) significantly slows test execution in the pipeline (https://github.com/vitest-dev/vitest/issues/7302)

options:
  max-time: 15

definitions:
  services:
    docker:
      memory: 6000
  caches:
    sonar: ~/.sonar/cache
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store
  steps:
    - step: &lint-test-build
        name: Lint, tests and build
        caches:
          - pnpm
          - sonar
          - docker # used by sonar pipes
        size: 4x # needed for additional memory requirements
        clone:
          depth: full # SonarCloud scanner needs the full history to assign issues properly
        script:
          - npm install -g corepack
          - corepack enable
          - pnpm install
          - pnpm run ci:lint-format
          - pnpm run build:ui-extension-service # temporary build step to enable type-check for ui-extension-renderer
          - pnpm run build:packages # need to build before type-checking as some packages include types in the build
          - pnpm run type-check
          - pnpm run coverage
          - pnpm run build:demo
          - pnpm run audit
          - pipe: sonarsource/sonarcloud-scan:2.0.0
            variables:
              SONAR_SCANNER_OPTS: -Xmx4G
          # - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
        artifacts:
          - demo/dist/**
    - step: &publish-npm
        name: Publish packages to npm
        caches:
          - pnpm
        trigger: manual
        deployment: production
        script:
          - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          - npm install -g corepack
          - corepack enable
          - pnpm install
          - pnpm run publish
          - git push --follow-tags
    - step: &deploy-demo
        name: Deploy demo to GitHub Pages
        caches:
          - pnpm
        deployment: production
        script:
          - npm install -g corepack
          - corepack enable
          - pnpm install
          # https://support.atlassian.com/bitbucket-cloud/docs/push-back-to-your-repository/#Configuring-an-alternate-Git-client
          - git config --global http.${BITBUCKET_GIT_HTTP_ORIGIN}.proxy http://localhost:29418/
          - pnpm run --filter demo deploy

pipelines:
  pull-requests:
    "**":
      - step: *lint-test-build
      - step: *publish-npm
  branches:
    master:
      - step: *lint-test-build
      - step: *deploy-demo
